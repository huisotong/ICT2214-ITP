name: Sandbox Dependency Scan

on:
  push:
    branches:
      - main
      - dev
      - Owen
  pull_request:

permissions:
  contents: read
  security-events: write

jobs:
  security-scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code (full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0      # important: include history
          fetch-tags: true

      - name: Scan for secrets with Gitleaks (git history)
        uses: gitleaks/gitleaks-action@v2
        with:
          # keep the default args or set your own; no --no-git here
          args: >
            detect --redact --report-format sarif --report-path gitleaks.sarif
            --exit-code=1

      # ------------------------
      # 2️⃣ Python Dependency Audit
      # ------------------------
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
          cache-dependency-path: backend/requirements.txt

      - name: Install Python dependencies
        run: pip install -r backend/requirements.txt
      
      - name: Install pip-audit
        run: pip install pip-audit

      - name: Run pip-audit
        run: pip-audit -r backend/requirements.txt

      # ------------------------
      # 3️⃣ Node.js Dependency Audit
      # ------------------------
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install frontend dependencies
        working-directory: frontend
        run: npm ci

      - name: Run npm audit
        working-directory: frontend
        run: npm audit --audit-level=high

      # ------------------------
      # 4️⃣ OWASP Dependency Check (Optional, heavy)
      # ------------------------
      - name: OWASP Dependency-Check~
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'Unified AI Sandbox'
          path: '.'
          format: 'HTML'
          out: 'reports'
          args: >
            --enableExperimental
            --failOnCVSS 7
            --enableRetired

      - name: Upload OWASP report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-report
          path: reports
